{"name":"Mapfish Appserver","tagline":"Mapfish Appserver is a framework for web mapping applications using OGC standards and the Mapfish protocol","body":"Mapfish Appserver\r\n=================\r\n\r\nMapfish Appserver is a platform for building web mapping applications using OGC standards and the Mapfish REST protocol.\r\n\r\n\r\nFeatures\r\n--------\r\n\r\nMapfish Appserver comes with the following out-of-the box features:\r\n\r\n- Organize maps by topics, categories, organisational units, keywords and more\r\n- Combine maps with background and overlay topics with adjustable opacity\r\n- Import UMN Mapserver mapfiles to publish new topics within seconds\r\n- Fully customizable legends and feature infos\r\n- Creation of complex custom searches\r\n- Rich digitizing and editing functionality\r\n- Role-based access control on topic, layer and attribute level\r\n- Access control for WMS and WFS\r\n- Rich library of ExtJS 4 based map components\r\n- Multiple customizable viewers from minimal mobile viewer to full featured portal\r\n- Multi-site support\r\n- Built-in administration backend\r\n- Self-organized user groups\r\n\r\n\r\nUsage\r\n-----\r\n\r\nTo build a new Mapfish Appserver application, create a Rails application and include mapfish_appserver in your Gemfile::\r\n\r\n  rails new mfdemo --database=postgresql --skip-bundle --skip-javascript\r\n  cd mfdemo\r\n  echo \"gem 'therubyracer', :platforms => :ruby\" >>Gemfile\r\n  echo \"gem 'gb_mapfish_appserver'\" >>Gemfile\r\n  echo \"gem 'gb_mapfish_print'\" >>Gemfile\r\n  echo \"gem 'ruby_mapscript', :platforms => :ruby\" >>Gemfile\r\n  bundle install\r\n\r\nAlso make sure, you have MapScript installed::\r\n\r\n  sudo apt-get install ruby-mapscript1.9.1\r\n\r\nSetup the Mapfish project, initialize the application database::\r\n\r\n  rake db:create\r\n  rails generate mapfish:install --default-site-name=maps.example.com\r\n\r\nKeep the admin password for later.\r\n\r\nGenerate a basic viewer::\r\n\r\n  rake mapfish:viewer:create name=myviewer repo=https://github.com/pka/gb_gis_browser_viewer.git\r\n  rm public/index.html\r\n\r\nAdd a default route to your viewer in config/routes.rb::\r\n\r\n  root :to => \"apps#show\", :app => \"myviewer\"\r\n\r\nSetup a PostGIS database and load some data::\r\n\r\n  export PGPORT=5432\r\n  createdb geodb\r\n  psql -d geodb -c \"CREATE EXTENSION postgis\"\r\n  psql -d geodb -c \"GRANT ALL ON geometry_columns TO PUBLIC; GRANT ALL ON geography_columns TO PUBLIC; GRANT ALL ON spatial_ref_sys TO PUBLIC\"\r\n  wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_0_countries_lakes.zip\r\n  unzip ne_10m_admin_0_countries_lakes.zip\r\n  ogr2ogr -f PostgreSQL PG:\"dbname=geodb\" -nln countries -nlt MULTIPOLYGON ne_10m_admin_0_countries_lakes.shp\r\n\r\nCreate a mapfile naturalearth.map in the directory mapconfig/maps.example.com::\r\n\r\n\tMAP\r\n\t  NAME naturalearth\r\n\t\r\n\t  WEB\r\n\t    METADATA\r\n\t      \"wms_title\"                  \"Natural Earth\"\r\n\t      \"wms_onlineresource\"         \"http://wms.example.com/naturalearth\"\r\n\t      \"wms_srs\"                    \"EPSG:4326 EPSG:3857\"\r\n\t      \"wms_extent\"                 \"-180 -90 180 90\"\r\n\t      \"wms_feature_info_mime_type\" \"application/vnd.ogc.gml\"\r\n\t      'ows_enable_request'    '*'\r\n\t      \"wms_encoding\"               \"UTF-8\"\r\n\t    END\r\n\t    IMAGEPATH '/tmp/'\r\n\t    IMAGEURL '/tmp/'\r\n\t  END\r\n\t\r\n\t  SIZE 512 512\r\n\t  MAXSIZE 8192\r\n\t  RESOLUTION 96\r\n\t  DEFRESOLUTION 96\r\n\t\r\n\t  UNITS DD\r\n\t  PROJECTION\r\n\t    \"init=epsg:4326\"\r\n\t  END\r\n\t\r\n\t  EXTENT -180 -90 180 90\r\n\t\r\n\t  IMAGECOLOR 255 255 255\r\n\t\r\n\t  #SYMBOLSET \"../symbols/base.sym\"\r\n\t  #FONTSET   \"../fonts/fonts.txt\"\r\n\t\r\n\t  IMAGETYPE png\r\n\t\r\n\t  OUTPUTFORMAT\r\n\t    NAME png\r\n\t    DRIVER \"AGG/PNG\"\r\n\t    IMAGEMODE rgb\r\n\t    FORMATOPTION \"INTERLACE=OFF\"\r\n\t  END\r\n\t\r\n\t  LAYER\r\n\t    NAME 'countries'\r\n\t    METADATA\r\n\t      \"wms_title\"                       \"Countries\"\r\n\t      \"wms_srs\"                         \"EPSG:4326\"\r\n\t      \"wms_extent\"                      \"-180 -90 180 90\"\r\n\t      \"wms_include_items\"               \"name,pop_est\"\r\n\t      \"gml_include_items\"               \"name,pop_est\"\r\n\t      \"gml_name_alias\"                  \"Name\"\r\n\t      \"gml_pop_est_alias\"               \"Population\"\r\n\t    END\r\n\t\r\n\t    EXTENT -180 -90 180 90\r\n\t    #MINSCALEDENOM 1\r\n\t    #MAXSCALEDENOM 500000.5\r\n\t\r\n\t    STATUS ON\r\n\t    TYPE POLYGON\r\n\t    CONNECTIONTYPE postgis\r\n\t    CONNECTION \"dbname=mfdemo port=5432\"\r\n\t    DATA \"geom FROM countries\"\r\n\t\r\n\t    CLASS\r\n\t      NAME 'All countries'\r\n\t      STYLE\r\n            WIDTH 0.91 \r\n            OUTLINECOLOR 0 0 0\r\n            COLOR 0 255 0\r\n\t      END\r\n\t    END\r\n\t  END\r\n\t\r\n\tEND\r\n\r\nCheck your WMS setup::\r\n\r\n  #sudo apt-get install cgi-mapserver\r\n  wget -O map.png \"http://localhost/cgi-bin/mapserv?map=$(pwd)/mapconfig/maps.example.com/naturalearth.map&SERVICE=WMS&VERSION=1.3.0&REQUEST=GetMap&BBOX=-90,-180,90,180&CRS=EPSG:4326&WIDTH=706&HEIGHT=354&LAYERS=countries&STYLES=&FORMAT=image/png\"\r\n\r\nOpen ``config/initializers/mapfish.rb`` to configure your application.\r\n\r\nImport the mapfile into a new topic::\r\n\r\n  rake mapfile:import_topic MAPFILE=mapconfig/maps.example.com/naturalearth.map SITE=maps.example.com\r\n\r\nStart the application server and open your first viewer application in your web browser::\r\n\r\n  rails server\r\n  x-www-browser localhost:3000/\r\n\r\nTo access the backend::\r\n\r\n  x-www-browser localhost:3000/gbadmin\r\n\r\nLogin as 'admin' with with the generated password. After your first login you will be redirected back to the root path.\r\nGo to http://localhost:3000/gbadmin/user/1/edit to change the password.\r\n\r\n\r\nDocumentation\r\n-------------\r\n\r\nFor more documentation see the `Github wiki <https://github.com/sourcepole/mapfish_appserver/wiki>`_\r\n\r\n\r\nAuthors and License\r\n-------------------\r\n\r\nPrimary authors are Pirmin Kalberer and Matthias Walker, Sourcepole, Stefan Zinggeler and Adrian Herzog, Canton of Zurich.\r\n\r\n\r\nNew BSD License\r\n\r\n*Copyright (c) 2009-2013 Sourcepole AG & Canton of Zurich*\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}